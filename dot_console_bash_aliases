export SHELL=/bin/bash
alias ll="ls -lah"
function rs {
    bin/rspec --format documentation "$@"; echo -e '\a'
}
function rsf {
    bundle exec rspec --format documentation "$@"; echo -e '\a'
}
function rsc {
    RSPEC_FILE=$(cut -d':' -f1 <<< "$1")
    echo "$RSPEC_FILE" | entr -s "source ~/.bash_aliases; rs \"$1\""
}
function rsw {
    rg --files spec/ -g '*.rb' | entr -s 'source ~/.bash_aliases; rs "$0"'
}
function jd {
    if [ $? -eq 0]; then echo -e "GOOD\n\a\n"; else echo -e "BAD\n\a\n"; fi
}
alias appw="rg --files app/ lib/ -g '*.rb' | entr"


# Get sudo
if ! [ -x "$(command -v sudo)" ]; then
  cat <<'EOF'
sudo not installed. Please install it with:
  docker exec -u root -it $(docker ps -aqf "name=console_console") /bin/bash
    apt-get install -y sudo &&
      adduser console sudo &&
      echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers &&
      exit
EOF
  exit
fi

# Using entr:
# rg --files spec/ -g '*.rb' | entr -s 'bin/rspec --format documentation "$0"; echo -e "\a"'
# rg --files . -g '*.rb' | entr -s 'bin/rspec --format documentation "<spec file>"; echo -e "\a"'
# Install entr
if ! [ -x "$(command -v entr)" ]; then
  echo 'entr is not installed.  Installing...' >&2
  pushd /home/console
  git clone https://github.com/skomanduri/entr-wsl.git
  cd entr-wsl
  ./configure
  sudo make install
  popd
fi

# Install rg
if ! [ -x "$(command -v rg)" ]; then
    echo 'ripgrep (rg) is not installed.  Installing...' >&2
    pushd /home/console
    curl -LO https://github.com/BurntSushi/ripgrep/releases/download/0.10.0/ripgrep_0.10.0_amd64.deb
    sudo dpkg -i ripgrep_0.10.0_amd64.deb
    popd
fi

# Install some useful utilities
function apt-install {
    if ! [ -x "$(command -v $1)" ]; then
        echo "$1 is not installed.  Installing..." >&2
        sudo apt-get install -y $1
    fi
}
apt-install htop
apt-install wget
apt-install vim

# Set up ssh agent
function ssh-up {
    if [ -z $SSH_AGENT_PID ]; then
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa  # or whatever your key is called
    fi
}
